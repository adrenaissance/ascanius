name: CI Pipeline

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  conventional-commit:
    runs-on: ubuntu-latest
    outputs:
      all_docs: ${{ steps.check-commits.outputs.all_docs }}

    steps:
      - uses: actions/checkout@v4

      - id: check-commits
        name: Check conventional commits and docs-only
        run: |
          regex="^(build|chore|ci|docs|feat|fix|perf|refactor|style|test|revert|release)(\([\w\s\-]+\))?(!)?: .{1,50}"

          if [ "$GITHUB_EVENT_NAME" = "push" ]; then
            commits=$(git rev-list ${{ github.event.before }}..${{ github.sha }})
          else
            commits=$(git rev-list ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }})
          fi

          error=0
          all_docs=true

          for sha in $commits; do
            msg=$(git log -1 --pretty=format:%s $sha)

            if ! [[ $msg =~ $regex ]]; then
              echo "Commit $sha message does not follow conventional commit format:"
              echo "  \"$msg\""
              error=1
            fi

            if ! [[ $msg =~ ^docs ]]; then
              all_docs=false
            fi
          done

          if [ $error -eq 1 ]; then
            echo "One or more commit messages are invalid."
            exit 1
          fi

          echo "::set-output name=all_docs::$all_docs"
          echo "All commits are valid."

  build:
    needs: conventional-commit
    runs-on: ubuntu-latest
    if: needs.conventional-commit.outputs.all_docs != 'true'

    strategy:
      matrix:
        go-version: ['1.24.x']

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Display Go version
        run: go version

      - name: Install dependencies
        run: go get .

      - name: Build
        run: go build -v ./...

      - name: Test with the Go CLI
        run: go test

